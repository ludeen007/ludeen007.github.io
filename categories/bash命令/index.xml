<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>Bash命令 on 千里之行始于足下</title>
    <link>https://ludeen007.github.io/categories/bash%E5%91%BD%E4%BB%A4/</link>
    <description>Recent content in Bash命令 on 千里之行始于足下</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>ludeen007@gmail.com (jack)</managingEditor>
    <webMaster>ludeen007@gmail.com (jack)</webMaster>
    <copyright>©{year}, All Rights Reserved</copyright>
    
        <atom:link href="https://ludeen007.github.io/categories/bash%E5%91%BD%E4%BB%A4/index.xml" rel="self" type="application/rss+xml" />
    
    
    

      
      <item>
        <title>bash</title>
        <link>https://ludeen007.github.io/en/posts/linux/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/linux/</guid>
        <description>技巧 1 2 3 4 5 6 7 #重新执行上一个命令 !! #获取上一个命令的输出 $(!!) #复制fabric-ca-client 到当前目录下的bin目录，可以这样： which</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      
      <item>
        <title>git</title>
        <link>https://ludeen007.github.io/en/posts/git/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/git/</guid>
        <description>git 实用工具、使用技巧等 bash-git-prompt 在 bash 命令提示符后面，显示有用的 git 信息，比如有几个文件改动等 https://github.com/magicmonty/bash-git-prompt git 命令别名，减少打字 https://github.com/GitAlias/gitalias git cheat sheet https://github.com/arslanbilal/git-cheat-sheet git tips https://github.com/git-tips/tips 备忘的 git 命令 对比两个</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
            
              <category>Git</category>
            
          
            
              <category>Linux</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      
      <item>
        <title>grep</title>
        <link>https://ludeen007.github.io/en/posts/awk/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/awk/</guid>
        <description>awk 使用例子 使用技巧等 awk: Extract and Manipulate Data • A programmable filter that reads and processes input line by line • Rich built-in features: • explicit fields ($1 &amp;hellip; $NF) &amp;amp; records management • functions (math, string manipulation, etc.) • regular expressions parsing and filtering • Features like variables, loops, conditionals, associative arrays,userdefined functions Highly recommended book: The awk programming language by Aho,</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
            
              <category>awk</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      
      <item>
        <title>grep</title>
        <link>https://ludeen007.github.io/en/posts/find/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/find/</guid>
        <description>find 使用例子 使用技巧等 find /opt -name &amp;ldquo;README*&amp;rdquo; -exec wc -l {} + Features of find • path: may have multiple paths, eg. find /usr /opt -iname &amp;ldquo;*.so&amp;rdquo; • criteria • -name, -iname, -type (f,d,l), -inum • -user , -group , -perm (ugo) • -size +x[c], -empty, -newer • -atime +x, -amin +x, -mmin -x, -mtime -x • criteria may be combined with logical</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
            
              <category>find</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      
      <item>
        <title>grep</title>
        <link>https://ludeen007.github.io/en/posts/grep/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/grep/</guid>
        <description>grep 使用例子 使用技巧等 递归查找特定文件中的字符串 grep -r -i &amp;ndash;include *.json &amp;quot;moment&amp;quot; /some/dir/ grep -i -n &amp;lsquo;col&amp;rsquo; states.txt Useful grep Options • -i: ignore case • -n: display line numbers along with lines • -v: print inverse ie. lines that do not match the regular expression • -c: print a count of lines</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
            
              <category>grep</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      
      <item>
        <title>grep</title>
        <link>https://ludeen007.github.io/en/posts/ls/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/ls/</guid>
        <description>ls 使用例子 使用技巧等</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
            
              <category>ls</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      
      <item>
        <title>grep</title>
        <link>https://ludeen007.github.io/en/posts/sed/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/sed/</guid>
        <description>sed 使用例子 使用技巧等 sed: parse and transform text • sed is a stream editor • Looks for a pattern in text and applies changes (edits) to them • A batch or non-interactive editor • Reads from file or stdin (so, pipes are good) one line at a time • The original input file is unchanged (sed is also a filter), results are sent</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
            
              <category>sed</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>