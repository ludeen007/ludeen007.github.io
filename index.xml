<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" 
  xmlns:content="http://purl.org/rss/1.0/modules/content/" 
  xmlns:dc="http://purl.org/dc/elements/1.1/" 
  xmlns:atom="http://www.w3.org/2005/Atom" 
  xmlns:sy="http://purl.org/rss/1.0/modules/syndication/" 
  xmlns:media="http://search.yahoo.com/mrss/">
  <channel>
    <title>千里之行始于足下</title>
    <link>https://ludeen007.github.io/</link>
    <description>Recent content on 千里之行始于足下</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <managingEditor>ludeen007@gmail.com (jack)</managingEditor>
    <webMaster>ludeen007@gmail.com (jack)</webMaster>
    <copyright>©{year}, All Rights Reserved</copyright>
    <lastBuildDate>Wed, 11 Dec 2019 18:42:55 +0800</lastBuildDate>
    
        <atom:link href="https://ludeen007.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      
        
      

      
      <item>
        <title>《Javascript高级程序设计》3e读书笔记</title>
        <link>https://ludeen007.github.io/en/posts/reading-notes/professionaljavascriptforweb3e/</link>
        <pubDate>Wed, 11 Dec 2019 18:42:55 +0800</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        <atom:modified>Wed, 11 Dec 2019 18:42:55 +0800</atom:modified>
        <guid>https://ludeen007.github.io/en/posts/reading-notes/professionaljavascriptforweb3e/</guid>
        <description>原作名《Professional JavaScript for Web》 TODO:待整理 for-in 语句遍历属性 2 种值 基本类型值：Undefined Null Boolean Number String。按值复制。</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>读书笔记</category>
            
          
            
              <category>Javascript</category>
            
          
        
        
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>《精通Git》 2e读书笔记</title>
        <link>https://ludeen007.github.io/en/posts/reading-notes/progit2e/</link>
        <pubDate>Wed, 11 Dec 2019 18:42:55 +0800</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        <atom:modified>Wed, 11 Dec 2019 18:42:55 +0800</atom:modified>
        <guid>https://ludeen007.github.io/en/posts/reading-notes/progit2e/</guid>
        <description>原作名《Pro Git》 TODO:待整理 Git 直接记录快照，而非差异比较 Figure 6. 工作目录、暂存区域以及 Git 仓库 文件的 3 种状态： 已修改 modified 已暂存 staged 已提交 committed 基</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>读书笔记</category>
            
          
            
              <category>Git</category>
            
          
        
        
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>读书摘录</title>
        <link>https://ludeen007.github.io/en/posts/reading-notes/excerpts/</link>
        <pubDate>Wed, 11 Dec 2019 18:42:55 +0800</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        <atom:modified>Wed, 11 Dec 2019 18:42:55 +0800</atom:modified>
        <guid>https://ludeen007.github.io/en/posts/reading-notes/excerpts/</guid>
        <description>看书过程发现有启发的摘录 《人件》2e: 我们必须学习如何多花时间在思考上，少花时间在实施上。我们只是做事，没时间思考工作自身 《Spring 微服</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>读书笔记</category>
            
          
            
              <category>摘录</category>
            
          
        
        
          
            
              <category>读书笔记</category>
            
          
        
        
      </item>
      
      <item>
        <title>bash</title>
        <link>https://ludeen007.github.io/en/posts/linux/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/linux/</guid>
        <description>技巧 1 2 3 4 5 6 7 #重新执行上一个命令 !! #获取上一个命令的输出 $(!!) #复制fabric-ca-client 到当前目录下的bin目录，可以这样： which</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      
      <item>
        <title>Couchdb</title>
        <link>https://ludeen007.github.io/en/posts/fabric/couchdb/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/fabric/couchdb/</guid>
        <description>Couchdb 校验数据入库，比如在 wallet 验证身份(可扩展到查询其他数据) 1. 去可视化页面里进行人工查验 couchdb 服务起来后，访问 http://IP:PORT/_utils/index.html 来查看数据库 查看应用日志，找到标志身</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Fabric</category>
            
          
            
              <category>Couchdb</category>
            
          
        
        
          
            
              <category>Fabric</category>
            
          
        
        
      </item>
      
      <item>
        <title>docker</title>
        <link>https://ludeen007.github.io/en/posts/docker/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/docker/</guid>
        <description>TODO: 待整理 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 docker ps | awk &amp;#39;{print $NF}&amp;#39; | tail -7 #TODO 合并显示两栏，左边容器名，右边容器ip docker ps | awk &amp;#39;{print $NF}&amp;#39; | tail -7 | xargs docker inspect -f &amp;#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&amp;#39; docker ps | awk &amp;#39;{print</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Docker</category>
            
          
        
        
          
            
              <category>Docker</category>
            
          
        
        
      </item>
      
      <item>
        <title>Fabric 命令行工具使用</title>
        <link>https://ludeen007.github.io/en/posts/fabric/fabric/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/fabric/fabric/</guid>
        <description>Fabric 命令行工具 configtxlator 1 2 #创世块的内容转为json，里面有configtx.yaml文件的内容，尤其是policies的。 configtxlator proto_decode --input genesis.block --type common.Block &amp;gt;&amp;gt; genesis.block.json 上图箭头</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Fabric</category>
            
          
        
        
          
            
              <category>Fabric</category>
            
          
        
        
      </item>
      
      <item>
        <title>git</title>
        <link>https://ludeen007.github.io/en/posts/git/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/git/</guid>
        <description>git 命令 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 39 40 41 42 43 #对比两个分支 git diff branch1..branch2 #避免git push每次都要</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Bash命令</category>
            
          
            
              <category>Git</category>
            
          
            
              <category>Linux</category>
            
          
        
        
          
            
              <category>Bash命令</category>
            
          
        
        
      </item>
      
      <item>
        <title>know-how</title>
        <link>https://ludeen007.github.io/en/posts/know-how/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/know-how/</guid>
        <description>从 GitHub 下载单个文件 Go to the file you want to download. Click it to view the contents within the GitHub UI. In the top right, right click the Raw button. Save as&amp;hellip; 来自 https://stackoverflow.com/questions/4604663/download-single-files-from-github javascript package.json 文件里加入以下命令，来使用淘宝 npm 镜像源安装依赖包 1 2 3 {</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>know-how</category>
            
          
        
        
          
            
              <category>know-how</category>
            
          
        
        
      </item>
      
      <item>
        <title>Kubernetes</title>
        <link>https://ludeen007.github.io/en/posts/kubernetes/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/kubernetes/</guid>
        <description>kubectl 命令 1 2 3 4 5 6 7 8 9 #列出pods kubectl get pods --all-namespaces #在应用容器里执行命令 kubectl exec -it postgredb-explorer-deployment-xxxxxxxxx -n explorer bash #查看应用日志 kubectl logs -f postgredb-explorer-deployment-8d78b7d6f-fbx97 -n explorer #一次创建多个configmap</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Kubernetes</category>
            
          
        
        
          
            
              <category>Kubernetes</category>
            
          
        
        
      </item>
      
      <item>
        <title>openssl</title>
        <link>https://ludeen007.github.io/en/posts/fabric/openssl/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/fabric/openssl/</guid>
        <description>openssl 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 # openssl查看证书内容 openssl x509 -text -noout -in ca.example.com-cert.pem openssl crl -in /root/fabric-ca/clients/admin/msp/crls/crl.pem -text -noout openssl crl -text -noout -in ca.pem # 查看keyusa</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Fabric</category>
            
          
            
              <category>openssl</category>
            
          
        
        
          
            
              <category>Fabric</category>
            
          
        
        
      </item>
      
      <item>
        <title>VSCode</title>
        <link>https://ludeen007.github.io/en/posts/vscode/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/vscode/</guid>
        <description>一、 使用技巧 1. windows 上配置 git-bash 为默认的 bash 确保已经安装 git-bash 配置文件 settings.json 加入以下内容即可 &amp;ldquo;terminal.integrated.shell.windows&amp;rdquo;: &amp;ldquo;D:\Program Files\Git\bin\bash.exe&amp;rdquo; 2. 一次编辑多行 选好位置，比如行首，按 Ctrl+F2 进入列模式 二、 配置 VSCode 远</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>Tools</category>
            
          
            
              <category>VSCode</category>
            
          
            
              <category>tips</category>
            
          
        
        
          
            
              <category>VSCode</category>
            
          
        
        
      </item>
      
      <item>
        <title>学习CSS布局的笔记</title>
        <link>https://ludeen007.github.io/en/posts/css/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        <author>ludeen007@gmail.com (jack)</author>
        
        <guid>https://ludeen007.github.io/en/posts/css/</guid>
        <description>网址 http://zh.learnlayout.com/ 一、display属性 block 块级元素：div，p，form，header，footer，section。 inline 行内元素：span，a。 none 无：s</description>
        
        <dc:creator>jack</dc:creator>
        
        
        
        
          
            
              <category>notes</category>
            
          
            
              <category>CSS</category>
            
          
            
              <category>frontend</category>
            
          
        
        
          
            
              <category>notes</category>
            
          
        
        
      </item>
      

    
  </channel>
</rss>