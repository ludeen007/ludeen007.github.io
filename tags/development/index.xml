<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Development on 千里之行始于足下</title>
    <link>https://ludeen007.github.io/tags/development/</link>
    <description>Recent content in Development on 千里之行始于足下</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="https://ludeen007.github.io/tags/development/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>docker命令</title>
      <link>https://ludeen007.github.io/posts/virtualization/docker/docker-cli/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ludeen007.github.io/posts/virtualization/docker/docker-cli/</guid>
      <description>docker ps | awk &#39;{print $NF}&#39; | tail -7 #TODO 合并显示两栏，左边容器名，右边容器ip docker ps | awk &#39;{print $NF}&#39; | tail -7 | xargs docker inspect -f &#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39; docker ps | awk &#39;{print $NF}&#39; | tail -7 | xargs docker inspect -f &#39;{{range .NetworkSettings.Networks}}{{.IPAddress}}{{end}}&#39; docker rmi -f $(docker image ls | awk &#39;{print $1}&#39;) #进入容器执行命令 docker exec -it cli bash #删除卷 docker volume rm $(docker volume ls | tail -n +2 | awk &#39;{print $NF}&#39;) #拷出容器里的文件 docker cp containerid:/some/path/file .</description>
    </item>
    
    <item>
      <title>kubectl命令</title>
      <link>https://ludeen007.github.io/posts/virtualization/kubernetes/kubectl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ludeen007.github.io/posts/virtualization/kubernetes/kubectl/</guid>
      <description>#列出pods kubectl get pods --all-namespaces #在应用容器里执行命令 kubectl exec -it postgredb-explorer-deployment-xxxxxxxxx -n explorer bash #查看应用日志 kubectl logs -f postgredb-explorer-deployment-8d78b7d6f-fbx97 -n explorer #一次创建多个configmap #指定到yaml文件的所在目录 kubectl create -f x/y/z/configmap/  </description>
    </item>
    
    <item>
      <title>VSCode launch.json示例</title>
      <link>https://ludeen007.github.io/posts/vscode/vscode-launch/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ludeen007.github.io/posts/vscode/vscode-launch/</guid>
      <description>调试bash脚本 { // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387 &amp;quot;version&amp;quot;: &amp;quot;0.2.0&amp;quot;, &amp;quot;configurations&amp;quot;: [{ &amp;quot;type&amp;quot;: &amp;quot;bashdb&amp;quot;, &amp;quot;request&amp;quot;: &amp;quot;launch&amp;quot;, &amp;quot;name&amp;quot;: &amp;quot;Bash-Debug (select script from list of sh files)&amp;quot;, &amp;quot;cwd&amp;quot;: &amp;quot;${workspaceFolder}&amp;quot;, &amp;quot;program&amp;quot;: &amp;quot;${command:SelectScriptName}&amp;quot;, &amp;quot;args&amp;quot;: [] } ] }  launch.json文件模板 { // Use IntelliSense to learn about possible attributes. // Hover to view descriptions of existing attributes. // For more information, visit: https://go.</description>
    </item>
    
    <item>
      <title>VSCode 使用技巧</title>
      <link>https://ludeen007.github.io/posts/vscode/tips/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ludeen007.github.io/posts/vscode/tips/</guid>
      <description>windows上配置git-bash为默认的bash  确保已经安装git-bash 配置文件settings.json加入 &amp;ldquo;terminal.integrated.shell.windows&amp;rdquo;: &amp;rdquo;D:\Program Files\Git\bin\bash.exe&amp;rdquo; 即可。  一次编辑多行 选好位置，比如行首，按Ctrl+F2进入列模式</description>
    </item>
    
    <item>
      <title>搭建harbor.io私有容器仓库</title>
      <link>https://ludeen007.github.io/posts/virtualization/docker/harbor/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ludeen007.github.io/posts/virtualization/docker/harbor/</guid>
      <description>#hosts 配置： #172.x.y.z harbor.io #登陆 docker login -u admin -p admin harbor.io #创建、改标签、推送镜像 docker build -t mynode:v1.0 . docker tag mynode:v1.0 harbor.io/nodejs/mynode:v1.0 docker push harbor.io/nodejs/mynode:v1.0  </description>
    </item>
    
    <item>
      <title>配置VSCode远程开发</title>
      <link>https://ludeen007.github.io/posts/vscode/vscode-remote/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://ludeen007.github.io/posts/vscode/vscode-remote/</guid>
      <description> 注意在Win10上运行git-bash执行以下命令 REMOTEHOST=root@172.x.y.z scp $USERPROFILE/.ssh/id_rsa.pub $REMOTEHOST:~/tmp.pub ssh $REMOTEHOST &amp;quot;mkdir -p ~/.ssh &amp;amp;&amp;amp; chmod 700 ~/.ssh &amp;amp;&amp;amp; cat ~/tmp.pub &amp;gt;&amp;gt; ~/.ssh/authorized_keys &amp;amp;&amp;amp; chmod 600 ~/.ssh/authorized_keys &amp;amp;&amp;amp; rm -f ~/tmp.pub&amp;quot;  最后一步，在~/.ssh/vscode-remote-config文件里添加远程主机的ip等信息，例子如下 Host CentOSxxx User root HostName 172.x.y.z  详见 https://code.visualstudio.com/docs/remote/troubleshooting#_configuring-key-based-authentication </description>
    </item>
    
  </channel>
</rss>